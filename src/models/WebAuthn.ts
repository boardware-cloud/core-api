/* tslint:disable */
/* eslint-disable */
/**
 * BoardWare Cloud APIs
 * BoardWare cloud console api
 *
 * The version of the OpenAPI document: 0.0.12
 * Contact: dan.chen@boardware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebAuthn
 */
export interface WebAuthn {
    /**
     * 
     * @type {string}
     * @memberof WebAuthn
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthn
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof WebAuthn
     */
    createdAt: number;
    /**
     * 
     * @type {string}
     * @memberof WebAuthn
     */
    os: string;
}

/**
 * Check if a given object implements the WebAuthn interface.
 */
export function instanceOfWebAuthn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "os" in value;

    return isInstance;
}

export function WebAuthnFromJSON(json: any): WebAuthn {
    return WebAuthnFromJSONTyped(json, false);
}

export function WebAuthnFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebAuthn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'createdAt': json['createdAt'],
        'os': json['os'],
    };
}

export function WebAuthnToJSON(value?: WebAuthn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'createdAt': value.createdAt,
        'os': value.os,
    };
}

