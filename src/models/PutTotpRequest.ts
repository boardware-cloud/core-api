/* tslint:disable */
/* eslint-disable */
/**
 * BoardWare Cloud APIs
 * BoardWare cloud console api
 *
 * The version of the OpenAPI document: 0.0.12
 * Contact: dan.chen@boardware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PutTotpRequest
 */
export interface PutTotpRequest {
    /**
     * 
     * @type {string}
     * @memberof PutTotpRequest
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof PutTotpRequest
     */
    totpCode: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PutTotpRequest
     */
    tickets: Array<string>;
}

/**
 * Check if a given object implements the PutTotpRequest interface.
 */
export function instanceOfPutTotpRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "totpCode" in value;
    isInstance = isInstance && "tickets" in value;

    return isInstance;
}

export function PutTotpRequestFromJSON(json: any): PutTotpRequest {
    return PutTotpRequestFromJSONTyped(json, false);
}

export function PutTotpRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutTotpRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'totpCode': json['totpCode'],
        'tickets': json['tickets'],
    };
}

export function PutTotpRequestToJSON(value?: PutTotpRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'totpCode': value.totpCode,
        'tickets': value.tickets,
    };
}

