/* tslint:disable */
/* eslint-disable */
/**
 * BoardWare Cloud APIs
 * BoardWare cloud console api
 *
 * The version of the OpenAPI document: 0.0.12
 * Contact: dan.chen@boardware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
} from './Pagination';
import type { Service } from './Service';
import {
    ServiceFromJSON,
    ServiceFromJSONTyped,
    ServiceToJSON,
} from './Service';

/**
 * Service list
 * @export
 * @interface ServiceList
 */
export interface ServiceList {
    /**
     * 
     * @type {Array<Service>}
     * @memberof ServiceList
     */
    data: Array<Service>;
    /**
     * 
     * @type {Pagination}
     * @memberof ServiceList
     */
    pagination: Pagination;
}

/**
 * Check if a given object implements the ServiceList interface.
 */
export function instanceOfServiceList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "pagination" in value;

    return isInstance;
}

export function ServiceListFromJSON(json: any): ServiceList {
    return ServiceListFromJSONTyped(json, false);
}

export function ServiceListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(ServiceFromJSON)),
        'pagination': PaginationFromJSON(json['pagination']),
    };
}

export function ServiceListToJSON(value?: ServiceList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(ServiceToJSON)),
        'pagination': PaginationToJSON(value.pagination),
    };
}

