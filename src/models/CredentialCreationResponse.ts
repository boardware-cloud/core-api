/* tslint:disable */
/* eslint-disable */
/**
 * BoardWare Cloud APIs
 * BoardWare cloud console api
 *
 * The version of the OpenAPI document: 0.0.12
 * Contact: dan.chen@boardware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebAuthnResponse } from './WebAuthnResponse';
import {
    WebAuthnResponseFromJSON,
    WebAuthnResponseFromJSONTyped,
    WebAuthnResponseToJSON,
} from './WebAuthnResponse';

/**
 * 
 * @export
 * @interface CredentialCreationResponse
 */
export interface CredentialCreationResponse {
    /**
     * 
     * @type {string}
     * @memberof CredentialCreationResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CredentialCreationResponse
     */
    os: string;
    /**
     * 
     * @type {string}
     * @memberof CredentialCreationResponse
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof CredentialCreationResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CredentialCreationResponse
     */
    rawId: string;
    /**
     * 
     * @type {WebAuthnResponse}
     * @memberof CredentialCreationResponse
     */
    response: WebAuthnResponse;
    /**
     * 
     * @type {Array<string>}
     * @memberof CredentialCreationResponse
     */
    transports: Array<string>;
}

/**
 * Check if a given object implements the CredentialCreationResponse interface.
 */
export function instanceOfCredentialCreationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "os" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "rawId" in value;
    isInstance = isInstance && "response" in value;
    isInstance = isInstance && "transports" in value;

    return isInstance;
}

export function CredentialCreationResponseFromJSON(json: any): CredentialCreationResponse {
    return CredentialCreationResponseFromJSONTyped(json, false);
}

export function CredentialCreationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CredentialCreationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'os': json['os'],
        'type': json['type'],
        'id': json['id'],
        'rawId': json['rawId'],
        'response': WebAuthnResponseFromJSON(json['response']),
        'transports': json['transports'],
    };
}

export function CredentialCreationResponseToJSON(value?: CredentialCreationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'os': value.os,
        'type': value.type,
        'id': value.id,
        'rawId': value.rawId,
        'response': WebAuthnResponseToJSON(value.response),
        'transports': value.transports,
    };
}

